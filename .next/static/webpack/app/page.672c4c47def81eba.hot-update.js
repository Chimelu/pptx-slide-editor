"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/SlideCanvas.tsx":
/*!****************************************!*\
  !*** ./src/components/SlideCanvas.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SlideCanvas: function() { return /* binding */ SlideCanvas; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _store_editorStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/store/editorStore */ \"(app-pages-browser)/./src/store/editorStore.ts\");\n/* __next_internal_client_entry_do_not_use__ SlideCanvas auto */ \nvar _s = $RefreshSig$();\n\n\n// Dynamic import for Fabric.js to avoid SSR issues\nlet fabric = null;\nfunction SlideCanvas() {\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const fabricRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isInitialized, setIsInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isFabricLoaded, setIsFabricLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { document, currentSlideIndex, selectedObjects, zoom, pan, gridSnap, objectSnap, selectObjects, updateObject, moveObjects, resizeObject, rotateObject, setPan, saveToHistory } = (0,_store_editorStore__WEBPACK_IMPORTED_MODULE_2__.useEditorStore)();\n    // Load Fabric.js dynamically\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadFabric = async ()=>{\n            try {\n                const fabricModule = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_fabric_dist_fabric_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! fabric */ \"(app-pages-browser)/./node_modules/fabric/dist/fabric.js\", 23));\n                fabric = fabricModule.fabric;\n                setIsFabricLoaded(true);\n            } catch (error) {\n                console.error(\"Failed to load Fabric.js:\", error);\n            }\n        };\n        loadFabric();\n    }, []);\n    // Initialize Fabric.js canvas\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (canvasRef.current && !fabricRef.current && fabric && isFabricLoaded) {\n            fabricRef.current = new fabric.Canvas(canvasRef.current, {\n                selection: true,\n                preserveObjectStacking: true,\n                backgroundColor: \"#ffffff\",\n                enableRetinaScaling: true,\n                renderOnAddRemove: true,\n                selectionColor: \"rgba(59, 130, 246, 0.3)\",\n                selectionBorderColor: \"rgb(59, 130, 246)\",\n                selectionLineWidth: 2,\n                transparentCorners: false,\n                cornerColor: \"rgb(59, 130, 246)\",\n                cornerStrokeColor: \"white\",\n                cornerSize: 10,\n                cornerStyle: \"circle\",\n                padding: 5,\n                // Enhanced settings for better rendering\n                skipTargetFind: false,\n                targetFindTolerance: 5,\n                perPixelTargetFind: false,\n                fireRightClick: true,\n                fireMiddleClick: true,\n                stopContextMenu: false,\n                // Better object interaction\n                allowTouchScrolling: true,\n                isDrawingMode: false,\n                // Improved performance\n                enableRetinaScaling: true,\n                imageSmoothingEnabled: true,\n                imageSmoothingQuality: \"high\"\n            });\n            // Set up event handlers\n            fabricRef.current.on(\"selection:created\", handleSelection);\n            fabricRef.current.on(\"selection:updated\", handleSelection);\n            fabricRef.current.on(\"selection:cleared\", handleSelectionCleared);\n            fabricRef.current.on(\"object:modified\", handleObjectModified);\n            fabricRef.current.on(\"object:moving\", handleObjectMoving);\n            fabricRef.current.on(\"object:scaling\", handleObjectScaling);\n            fabricRef.current.on(\"object:rotating\", handleObjectRotating);\n            // Add text editing events\n            fabricRef.current.on(\"text:changed\", handleTextChanged);\n            fabricRef.current.on(\"text:editing:exited\", handleTextEditingExited);\n            // Add object selection events for better UX\n            fabricRef.current.on(\"mouse:down\", (e)=>{\n                if (e.target) {\n                    console.log(\"Object selected:\", e.target.data);\n                }\n            });\n            setIsInitialized(true);\n        }\n        return ()=>{\n            if (fabricRef.current) {\n                fabricRef.current.dispose();\n                fabricRef.current = null;\n            }\n        };\n    }, [\n        isFabricLoaded\n    ]);\n    // Create Fabric.js objects function\n    const createFabricObject = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((obj)=>{\n        if (!fabric) return null;\n        try {\n            console.log(\"Creating Fabric.js object for:\", obj);\n            // Ensure transform values are reasonable and preserve exact positioning\n            const transform = {\n                left: obj.transform.left || 0,\n                top: obj.transform.top || 0,\n                width: Math.max(1, obj.transform.width || 100),\n                height: Math.max(1, obj.transform.height || 100),\n                angle: obj.transform.angle || 0,\n                scaleX: obj.transform.scaleX || 1,\n                scaleY: obj.transform.scaleY || 1,\n                flipX: obj.transform.flipX || false,\n                flipY: obj.transform.flipY || false\n            };\n            console.log(\"Using transform:\", transform);\n            // Common properties for all objects\n            const commonProps = {\n                left: transform.left,\n                top: transform.top,\n                angle: transform.angle,\n                scaleX: transform.scaleX,\n                scaleY: transform.scaleY,\n                flipX: transform.flipX,\n                flipY: transform.flipY,\n                data: {\n                    id: obj.id,\n                    type: obj.type\n                },\n                originX: \"left\",\n                originY: \"top\",\n                selectable: true,\n                evented: true,\n                hasControls: true,\n                hasBorders: true,\n                lockMovementX: false,\n                lockMovementY: false,\n                lockRotation: false,\n                lockScalingX: false,\n                lockScalingY: false,\n                lockUniScaling: false,\n                lockSkewingX: false,\n                lockSkewingY: false,\n                lockScalingFlip: false\n            };\n            switch(obj.type){\n                case \"text\":\n                    var _obj_style, _obj_style1, _obj_style2, _obj_style3, _obj_style4, _obj_style5, _obj_style6, _obj_style7;\n                    const textObject = new fabric.Text(obj.content || \"Text\", {\n                        ...commonProps,\n                        width: transform.width,\n                        height: transform.height,\n                        fontFamily: ((_obj_style = obj.style) === null || _obj_style === void 0 ? void 0 : _obj_style.fontFamily) || \"Arial\",\n                        fontSize: ((_obj_style1 = obj.style) === null || _obj_style1 === void 0 ? void 0 : _obj_style1.fontSize) || 18,\n                        fontWeight: ((_obj_style2 = obj.style) === null || _obj_style2 === void 0 ? void 0 : _obj_style2.fontWeight) || \"normal\",\n                        fontStyle: ((_obj_style3 = obj.style) === null || _obj_style3 === void 0 ? void 0 : _obj_style3.fontStyle) || \"normal\",\n                        textDecoration: ((_obj_style4 = obj.style) === null || _obj_style4 === void 0 ? void 0 : _obj_style4.textDecoration) || \"none\",\n                        fill: ((_obj_style5 = obj.style) === null || _obj_style5 === void 0 ? void 0 : _obj_style5.color) || \"#000000\",\n                        textAlign: ((_obj_style6 = obj.style) === null || _obj_style6 === void 0 ? void 0 : _obj_style6.textAlign) || \"left\",\n                        lineHeight: ((_obj_style7 = obj.style) === null || _obj_style7 === void 0 ? void 0 : _obj_style7.lineHeight) || 1.2,\n                        editable: true,\n                        lockUniScaling: true\n                    });\n                    // Add double-click handler for text editing\n                    textObject.on(\"dblclick\", ()=>{\n                        if (fabricRef.current) {\n                            fabricRef.current.setActiveObject(textObject);\n                            textObject.enterEditing();\n                            textObject.selectAll();\n                        }\n                    });\n                    console.log(\"Created text object:\", textObject);\n                    return textObject;\n                case \"image\":\n                    const img = new Image();\n                    img.src = obj.src || \"data:image/svg+xml;base64,\".concat(btoa('<svg width=\"100\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"100\" height=\"100\" fill=\"#ccc\"/><text x=\"50\" y=\"50\" text-anchor=\"middle\" dy=\".3em\">Image</text></svg>'));\n                    const imageObject = new fabric.Image(img, {\n                        ...commonProps,\n                        width: transform.width,\n                        height: transform.height,\n                        crossOrigin: \"anonymous\",\n                        lockUniScaling: true\n                    });\n                    console.log(\"Created image object:\", imageObject);\n                    return imageObject;\n                case \"rectangle\":\n                    var _obj_style8, _obj_style9, _obj_style10, _obj_style11, _obj_style12;\n                    const rectObject = new fabric.Rect({\n                        ...commonProps,\n                        width: transform.width,\n                        height: transform.height,\n                        fill: ((_obj_style8 = obj.style) === null || _obj_style8 === void 0 ? void 0 : _obj_style8.fill) || \"#ffffff\",\n                        stroke: ((_obj_style9 = obj.style) === null || _obj_style9 === void 0 ? void 0 : _obj_style9.stroke) || \"#000000\",\n                        strokeWidth: ((_obj_style10 = obj.style) === null || _obj_style10 === void 0 ? void 0 : _obj_style10.strokeWidth) || 1,\n                        strokeUniform: true,\n                        rx: ((_obj_style11 = obj.style) === null || _obj_style11 === void 0 ? void 0 : _obj_style11.rx) || 0,\n                        ry: ((_obj_style12 = obj.style) === null || _obj_style12 === void 0 ? void 0 : _obj_style12.ry) || 0\n                    });\n                    console.log(\"Created rectangle object:\", rectObject);\n                    return rectObject;\n                case \"ellipse\":\n                    var _obj_style13, _obj_style14, _obj_style15;\n                    const ellipseObject = new fabric.Ellipse({\n                        ...commonProps,\n                        rx: transform.width / 2,\n                        ry: transform.height / 2,\n                        fill: ((_obj_style13 = obj.style) === null || _obj_style13 === void 0 ? void 0 : _obj_style13.fill) || \"#ffffff\",\n                        stroke: ((_obj_style14 = obj.style) === null || _obj_style14 === void 0 ? void 0 : _obj_style14.stroke) || \"#000000\",\n                        strokeWidth: ((_obj_style15 = obj.style) === null || _obj_style15 === void 0 ? void 0 : _obj_style15.strokeWidth) || 1,\n                        strokeUniform: true\n                    });\n                    console.log(\"Created ellipse object:\", ellipseObject);\n                    return ellipseObject;\n                case \"line\":\n                    var _obj_style16, _obj_style17;\n                    // For lines, we need to calculate the actual line coordinates\n                    const lineLength = Math.sqrt(transform.width * transform.width + transform.height * transform.height);\n                    const lineAngle = Math.atan2(transform.height, transform.width);\n                    const lineObject = new fabric.Line([\n                        0,\n                        0,\n                        lineLength,\n                        0\n                    ], {\n                        ...commonProps,\n                        stroke: ((_obj_style16 = obj.style) === null || _obj_style16 === void 0 ? void 0 : _obj_style16.stroke) || \"#000000\",\n                        strokeWidth: ((_obj_style17 = obj.style) === null || _obj_style17 === void 0 ? void 0 : _obj_style17.strokeWidth) || 2,\n                        strokeUniform: true,\n                        lockRotation: false,\n                        lockScalingX: false,\n                        lockScalingY: false,\n                        lockUniScaling: true\n                    });\n                    // Apply the line's natural rotation\n                    lineObject.set(\"angle\", transform.angle * Math.PI / 180 + lineAngle);\n                    console.log(\"Created line object:\", lineObject);\n                    return lineObject;\n                case \"group\":\n                    // Handle grouped shapes - preserve as a single unit\n                    if (obj.children && obj.children.length > 0) {\n                        const groupObjects = obj.children.map((child)=>createFabricObject(child)).filter(Boolean);\n                        if (groupObjects.length > 0) {\n                            const group = new fabric.Group(groupObjects, {\n                                ...commonProps,\n                                subTargetCheck: true,\n                                interactive: true\n                            });\n                            console.log(\"Created group object with \".concat(groupObjects.length, \" children:\"), group);\n                            return group;\n                        }\n                    }\n                    // Fallback for groups without children\n                    console.warn(\"Group object \".concat(obj.id, \" has no children, creating placeholder\"));\n                    return new fabric.Rect({\n                        ...commonProps,\n                        width: transform.width,\n                        height: transform.height,\n                        fill: \"rgba(200, 200, 200, 0.3)\",\n                        stroke: \"#666\",\n                        strokeWidth: 1,\n                        strokeDashArray: [\n                            5,\n                            5\n                        ]\n                    });\n                default:\n                    console.warn(\"Unknown object type: \".concat(obj.type, \", creating fallback rectangle\"));\n                    return new fabric.Rect({\n                        ...commonProps,\n                        width: transform.width,\n                        height: transform.height,\n                        fill: \"#ffcccc\",\n                        stroke: \"#ff0000\",\n                        strokeWidth: 2,\n                        data: {\n                            id: obj.id,\n                            type: \"unknown\"\n                        }\n                    });\n            }\n        } catch (error) {\n            console.error(\"Error creating Fabric.js object for \".concat(obj.type, \":\"), error);\n            return null;\n        }\n    }, []);\n    // Render slide function\n    const renderSlide = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (!fabricRef.current || !document || !fabric) return;\n        const slide = document.slides[currentSlideIndex];\n        if (!slide) return;\n        console.log(\"Rendering slide:\", slide);\n        console.log(\"Slide objects:\", slide.objects);\n        // Clear canvas\n        fabricRef.current.clear();\n        // Set canvas dimensions with proper scaling and preserve aspect ratio\n        const canvasWidth = Math.max(slide.width, 800);\n        const canvasHeight = Math.max(slide.height, 600);\n        fabricRef.current.setDimensions({\n            width: canvasWidth,\n            height: canvasHeight\n        });\n        console.log(\"Canvas dimensions set to:\", canvasWidth, \"x\", canvasHeight);\n        // Sort objects by z-order if available, otherwise maintain order\n        const sortedObjects = [\n            ...slide.objects\n        ].sort((a, b)=>{\n            const zOrderA = a.zOrder || 0;\n            const zOrderB = b.zOrder || 0;\n            return zOrderA - zOrderB;\n        });\n        // Render objects with proper positioning and z-order\n        sortedObjects.forEach((obj, index)=>{\n            console.log(\"Creating Fabric.js object \".concat(index + 1, \":\"), obj);\n            const fabricObject = createFabricObject(obj);\n            if (fabricObject) {\n                // Set the object's z-index to maintain proper layering\n                fabricObject.set(\"zIndex\", index);\n                // Add object to canvas\n                fabricRef.current.add(fabricObject);\n                console.log(\"Added object \".concat(index + 1, \" to canvas:\"), fabricObject);\n            } else {\n                console.warn(\"Failed to create Fabric.js object for:\", obj);\n            }\n        });\n        // Ensure proper object stacking order\n        fabricRef.current.bringToFront();\n        // Render all objects\n        fabricRef.current.renderAll();\n        // Fit canvas to show all objects if needed\n        const objects = fabricRef.current.getObjects();\n        if (objects.length > 0) {\n            // Calculate the bounding box of all objects\n            let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n            objects.forEach((obj)=>{\n                const objLeft = obj.left || 0;\n                const objTop = obj.top || 0;\n                const objWidth = obj.width || 0;\n                const objHeight = obj.height || 0;\n                minX = Math.min(minX, objLeft);\n                minY = Math.min(minY, objTop);\n                maxX = Math.max(maxX, objLeft + objWidth);\n                maxY = Math.max(maxY, objTop + objHeight);\n            });\n            // Add some padding around objects\n            const padding = 50;\n            minX = Math.max(0, minX - padding);\n            minY = Math.max(0, minY - padding);\n            maxX = Math.min(canvasWidth, maxX + padding);\n            maxY = Math.min(canvasHeight, maxY + padding);\n            // Center the view if objects are not centered\n            const centerX = (minX + maxX) / 2;\n            const centerY = (minY + maxY) / 2;\n            const canvasCenterX = canvasWidth / 2;\n            const canvasCenterY = canvasHeight / 2;\n            if (Math.abs(centerX - canvasCenterX) > 10 || Math.abs(centerY - canvasCenterY) > 10) {\n                const offsetX = canvasCenterX - centerX;\n                const offsetY = canvasCenterY - centerY;\n                objects.forEach((obj)=>{\n                    obj.set({\n                        left: (obj.left || 0) + offsetX,\n                        top: (obj.top || 0) + offsetY\n                    });\n                });\n                fabricRef.current.renderAll();\n            }\n        }\n        console.log(\"Slide rendering completed\");\n    }, [\n        document,\n        currentSlideIndex,\n        createFabricObject\n    ]);\n    // Update canvas when slide changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (fabricRef.current && document && isInitialized) {\n            console.log(\"Slide changed, rendering new slide:\", currentSlideIndex);\n            console.log(\"Current slide data:\", document.slides[currentSlideIndex]);\n            renderSlide();\n        }\n    }, [\n        document,\n        currentSlideIndex,\n        isInitialized,\n        renderSlide\n    ]);\n    // Update canvas zoom and pan\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (fabricRef.current && fabric) {\n            fabricRef.current.setZoom(zoom);\n            fabricRef.current.absolutePan(new fabric.Point(pan.x, pan.y));\n        }\n    }, [\n        zoom,\n        pan\n    ]);\n    const handleSelection = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (!fabricRef.current) return;\n        const activeObjects = fabricRef.current.getActiveObjects();\n        const selectedIds = activeObjects.map((obj)=>{\n            var _obj_data;\n            return (_obj_data = obj.data) === null || _obj_data === void 0 ? void 0 : _obj_data.id;\n        }).filter(Boolean);\n        selectObjects(selectedIds);\n    }, [\n        selectObjects\n    ]);\n    const handleSelectionCleared = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        selectObjects([]);\n    }, [\n        selectObjects\n    ]);\n    const handleObjectModified = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (!fabricRef.current) return;\n        const activeObjects = fabricRef.current.getActiveObjects();\n        activeObjects.forEach((obj)=>{\n            var _obj_data;\n            if ((_obj_data = obj.data) === null || _obj_data === void 0 ? void 0 : _obj_data.id) {\n                updateObject(obj.data.id, {\n                    transform: {\n                        left: obj.left || 0,\n                        top: obj.top || 0,\n                        width: obj.width || 0,\n                        height: obj.height || 0,\n                        angle: obj.angle || 0,\n                        scaleX: obj.scaleX || 1,\n                        scaleY: obj.scaleY || 1,\n                        flipX: obj.flipX || false,\n                        flipY: obj.flipY || false\n                    }\n                });\n            }\n        });\n        saveToHistory();\n    }, [\n        updateObject,\n        saveToHistory\n    ]);\n    const handleObjectMoving = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        if (!fabricRef.current || !gridSnap) return;\n        const obj = e.target;\n        if (obj) {\n            // Snap to grid (10px grid)\n            const gridSize = 10;\n            obj.set({\n                left: Math.round(obj.left / gridSize) * gridSize,\n                top: Math.round(obj.top / gridSize) * gridSize\n            });\n        }\n    }, [\n        gridSnap\n    ]);\n    const handleObjectScaling = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        var _obj_data;\n        if (!fabricRef.current) return;\n        const obj = e.target;\n        if (obj && ((_obj_data = obj.data) === null || _obj_data === void 0 ? void 0 : _obj_data.id)) {\n            resizeObject(obj.data.id, obj.width || 0, obj.height || 0);\n        }\n    }, [\n        resizeObject\n    ]);\n    const handleObjectRotating = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        var _obj_data;\n        if (!fabricRef.current) return;\n        const obj = e.target;\n        if (obj && ((_obj_data = obj.data) === null || _obj_data === void 0 ? void 0 : _obj_data.id)) {\n            rotateObject(obj.data.id, obj.angle || 0);\n        }\n    }, [\n        rotateObject\n    ]);\n    // Text editing handlers\n    const handleTextChanged = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        var _textObject_data;\n        if (!fabricRef.current) return;\n        const textObject = e.target;\n        if (textObject && ((_textObject_data = textObject.data) === null || _textObject_data === void 0 ? void 0 : _textObject_data.id)) {\n            updateObject(textObject.data.id, {\n                content: textObject.text\n            });\n        }\n    }, [\n        updateObject\n    ]);\n    const handleTextEditingExited = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        var _textObject_data;\n        if (!fabricRef.current) return;\n        const textObject = e.target;\n        if (textObject && ((_textObject_data = textObject.data) === null || _textObject_data === void 0 ? void 0 : _textObject_data.id)) {\n            // Save the final text content\n            updateObject(textObject.data.id, {\n                content: textObject.text\n            });\n            saveToHistory();\n        }\n    }, [\n        updateObject,\n        saveToHistory\n    ]);\n    // Pan and zoom handlers\n    const handleMouseDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        if (!fabricRef.current) return;\n        if (e.button === 1 || e.button === 0 && e.altKey) {\n            fabricRef.current.isDragging = true;\n            fabricRef.current.selection = false;\n            fabricRef.current.defaultCursor = \"grab\";\n        }\n    }, []);\n    const handleMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        if (!fabricRef.current || !fabricRef.current.isDragging) return;\n        const deltaX = e.movementX;\n        const deltaY = e.movementY;\n        setPan({\n            x: pan.x + deltaX,\n            y: pan.y + deltaY\n        });\n    }, [\n        pan,\n        setPan\n    ]);\n    const handleMouseUp = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        if (!fabricRef.current) return;\n        fabricRef.current.isDragging = false;\n        fabricRef.current.selection = true;\n        fabricRef.current.defaultCursor = \"default\";\n    }, []);\n    const handleWheel = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e)=>{\n        if (!fabricRef.current) return;\n        e.preventDefault();\n        if (e.ctrlKey) {\n            // Zoom\n            const zoomFactor = e.deltaY > 0 ? 0.9 : 1.1;\n            const newZoom = Math.max(0.1, Math.min(5, zoom * zoomFactor));\n        // TODO: Implement zoom to cursor\n        } else {\n            // Pan\n            setPan({\n                x: pan.x - e.deltaX,\n                y: pan.y - e.deltaY\n            });\n        }\n    }, [\n        zoom,\n        pan,\n        setPan\n    ]);\n    if (!document) return null;\n    const slide = document.slides[currentSlideIndex];\n    if (!slide) return null;\n    // Show loading state while Fabric.js loads\n    if (!isFabricLoaded) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex-1 flex flex-col bg-gray-100 overflow-hidden\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 flex items-center justify-center p-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto mb-4\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\HP\\\\pptx-editor\\\\src\\\\components\\\\SlideCanvas.tsx\",\n                            lineNumber: 582,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-gray-600\",\n                            children: \"Loading editor...\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\HP\\\\pptx-editor\\\\src\\\\components\\\\SlideCanvas.tsx\",\n                            lineNumber: 583,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\HP\\\\pptx-editor\\\\src\\\\components\\\\SlideCanvas.tsx\",\n                    lineNumber: 581,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\HP\\\\pptx-editor\\\\src\\\\components\\\\SlideCanvas.tsx\",\n                lineNumber: 580,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\HP\\\\pptx-editor\\\\src\\\\components\\\\SlideCanvas.tsx\",\n            lineNumber: 579,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex-1 flex flex-col bg-gray-100 overflow-hidden\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-1 flex items-center justify-center p-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-white rounded-lg shadow-lg overflow-hidden border-2 border-gray-300\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                        ref: canvasRef,\n                        onMouseDown: handleMouseDown,\n                        onMouseMove: handleMouseMove,\n                        onMouseUp: handleMouseUp,\n                        onWheel: handleWheel,\n                        className: \"block border border-gray-200\",\n                        style: {\n                            minWidth: \"800px\",\n                            minHeight: \"600px\"\n                        }\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\HP\\\\pptx-editor\\\\src\\\\components\\\\SlideCanvas.tsx\",\n                        lineNumber: 594,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\HP\\\\pptx-editor\\\\src\\\\components\\\\SlideCanvas.tsx\",\n                    lineNumber: 593,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\HP\\\\pptx-editor\\\\src\\\\components\\\\SlideCanvas.tsx\",\n                lineNumber: 592,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-white border-t border-gray-200 px-4 py-2 text-sm text-gray-600\",\n                children: [\n                    \"Slide \",\n                    currentSlideIndex + 1,\n                    \" of \",\n                    document.slides.length,\n                    \" •\",\n                    slide.width,\n                    \" \\xd7 \",\n                    slide.height,\n                    \" •\",\n                    slide.objects.length,\n                    \" objects\"\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\HP\\\\pptx-editor\\\\src\\\\components\\\\SlideCanvas.tsx\",\n                lineNumber: 606,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\HP\\\\pptx-editor\\\\src\\\\components\\\\SlideCanvas.tsx\",\n        lineNumber: 591,\n        columnNumber: 5\n    }, this);\n}\n_s(SlideCanvas, \"aq+LutgmfrqRyWyDEo/vYJrGH1o=\", false, function() {\n    return [\n        _store_editorStore__WEBPACK_IMPORTED_MODULE_2__.useEditorStore\n    ];\n});\n_c = SlideCanvas;\nvar _c;\n$RefreshReg$(_c, \"SlideCanvas\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/SlideCanvas.tsx\n"));

/***/ })

});